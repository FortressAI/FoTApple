name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  SWIFT_VERSION: 5.9

jobs:
  build-macos:
    name: Build and Test - macOS
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      
      - name: Build
        run: swift build -v
      
      - name: Run Core Tests
        run: swift test --filter FoTCoreTests
      
      - name: Run Domain Pack Tests
        run: swift test --filter FoTDomainPacksTests
      
      - name: Run Medical Board Exam Tests
        run: swift test --filter MedicalBoardExamTests
      
      - name: Generate Test Report
        if: always()
        run: |
          swift test --enable-code-coverage
          xcrun llvm-cov export \
            .build/debug/FoTApplePackageTests.xctest/Contents/MacOS/FoTApplePackageTests \
            -instr-profile .build/debug/codecov/default.profdata \
            -format="text" > coverage.txt
      
      - name: Upload Coverage
        uses: codecov/codecov-action@v3
        if: always()
        with:
          file: ./coverage.txt
          fail_ci_if_error: false
  
  build-ios:
    name: Build - iOS Simulator
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.0'
      
      - name: Build iOS
        run: |
          xcodebuild build \
            -scheme FoTApple \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO
  
  lint:
    name: SwiftLint
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: SwiftLint
        run: |
          brew install swiftlint
          swiftlint lint --reporter github-actions-logging
  
  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
  
  medical-validation:
    name: Medical Board Exam Validation
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Swift
        uses: swift-actions/setup-swift@v1
        with:
          swift-version: ${{ env.SWIFT_VERSION }}
      
      - name: Run Medical Board Tests
        run: |
          swift test --filter MedicalBoardExamTests --enable-test-discovery
      
      - name: Generate Medical Validation Report
        if: always()
        run: |
          echo "# Medical Board Exam Validation Report" > medical-report.md
          echo "" >> medical-report.md
          echo "Date: $(date)" >> medical-report.md
          echo "Commit: ${{ github.sha }}" >> medical-report.md
          echo "" >> medical-report.md
          swift test --filter MedicalBoardExamTests 2>&1 | tee -a medical-report.md
      
      - name: Upload Medical Report
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: medical-validation-report
          path: medical-report.md
          retention-days: 90
  
  docs:
    name: Generate Documentation
    runs-on: macos-14
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Generate Swift-DocC
        run: |
          swift package generate-documentation \
            --target FoTCore \
            --output-path ./docs
      
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

